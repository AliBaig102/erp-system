generator client {
  provider = "prisma-client-js"
  output   = "../src/app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int        @id @default(autoincrement())
  email             String     @unique
  name              String
  password          String
  role              Role       @default(USER)
  accessToken       String?
  accessTokenExpiry DateTime?
  createdAt         DateTime   @default(now())
  Customer          Customer[]
}

model Customer {
  id              Int               @id @default(autoincrement())
  name            String
  email           String?
  phone           String?
  address         String?
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  userId          Int
  CustomerType    CustomerType      @default(CONSUMER)
  city            String?
  cnic            String?
  user            User              @relation(fields: [userId], references: [id])
  CustomerPayment CustomerPayment[]

  @@index([userId])
}

model CustomerPayment {
  id              Int                  @id @default(autoincrement())
  customerId      Int
  originalAmount  Decimal              @db.Decimal(12, 2)
  remainingAmount Decimal              @db.Decimal(12, 2)
  paymentMethod   PaymentMethod        @default(CASH)
  paymentStatus   PaymentStatus        @default(PENDING)
  transactionDate DateTime             @default(now())
  dueDate         DateTime?
  remarks         String?
  createdAt       DateTime             @default(now())
  updatedAt       DateTime             @updatedAt
  customer        Customer             @relation(fields: [customerId], references: [id])
  installments    PaymentInstallment[]

  @@index([customerId])
  @@index([paymentStatus])
}

model PaymentInstallment {
  id              Int             @id @default(autoincrement())
  paymentId       Int
  amount          Decimal         @db.Decimal(12, 2)
  transactionDate DateTime        @default(now())
  paymentMethod   PaymentMethod   @default(CASH)
  remarks         String?
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
  payment         CustomerPayment @relation(fields: [paymentId], references: [id])

  @@index([paymentId])
}

enum Role {
  USER
  ADMIN
  MODERATOR
}

enum Status {
  ACTIVE
  INACTIVE
  PENDING
  APPROVED
  REJECTED
}

enum CustomerType {
  RETAILER
  WHOLESALER
  DISTRIBUTOR
  CONSUMER
}

enum PaymentMethod {
  CASH
  BANK_TRANSFER
  MOBILE_PAYMENT
  CREDIT
}

enum PaymentStatus {
  PENDING
  COMPLETED
  FAILED
  PARTIAL
}
